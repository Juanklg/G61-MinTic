########  paso a paso rapido ########
para instalar django
- pip install django

Para crear un nuevo proyecto
- django-admin startproject xxxxxxxxx

Para ejecutar el proyecto en modo desarrollo
- python manage.py runserver

######## creacion de mini apps en django ########
crear una app llamada gestor(junto a manage.py)
-python manage.py startapp gestor

agregar nombre de la app a lista de INSTALLED_APPS en settings

crear los modelos dentro de el archivo modelos en gestor

cree los modelos en base de datos
-python manage.py makemigrations

ejecute el archiv creado para crear las tablas en la base de datos
-python manage.py sqlmigrate gestor 0001

aplicamos las migraciones
-python manage.py migrate

########  correr un terminal para python con django ########
-python manage.py shell

crear registro
- art1 = articulo.objects.create(nombre='silla',seccion='hogar',precio=500)
- art2 = articulo.objects.create(nombre='zapatos',seccion='caballeros',precio=200)

actualizar registro
- art1.precio = 555
- art1.save()

leer un registro
- art3 = articulo.objects.get(id=4)

borrar un registro
- art3.delete()





########  paso a paso nueva pagina ########
1- Crear archivo html dentro de la carpeta templates
2- Crear el path dentro del archivo urls.py en la lista del final
3- importar en urls.py la funcion desde views.py
4- Crear la funcion dentro del views
5- actualizar el loader en la funcion del views con el nombre del archivo html
6- (Opcional) Agregar fecha, nombre y title a el diccionario en la funcion del views
7- (Opcional) Agregar el link en el header.html
8- Agregar en el archivo html creado en el paso 1, en el block main con el contenido de la pagina









########  paso a paso con entorno virtual para produccion ########

Entrar a la carpeta de django desde el terminal 

- Crear el ambiente virtual para instalar las dependencias
python -m venv venv

- Activar venv
. venv/Scripts/activate

- Una ve activado, instalamos django
pip install django

- Crear mi aplicacion de django
django-admin startproject django61

- Crear instancia de base de datos dentro de la carpeta del proyecto
Python manage.py migrate
- Ejecutamos el servidor de desarrollo
Python manage.py runserver

- Generar el primer archivo de vista (views.py)
- modificar la lista de url en el archivo urls.py, agregando el endpoint y la funcion que se ejecuta

